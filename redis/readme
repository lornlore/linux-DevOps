一、redis
1.一主二从三哨兵
    一主两从三哨兵集群，当master节点宕机时，通过哨兵(sentinel)重新推选出新的master节点，保证集群的可用性。
2.哨兵的主要功能：
    1.集群监控：负责监控 Redis master 和 slave 进程是否正常工作。
    2.消息通知：如果某个 Redis 实例有故障，那么哨兵负责发送消息作为报警通知给管理员。
    3.故障转移：如果 master node 挂掉了，会自动转移到 slave node 上。
    4.配置中心：如果故障转移发生了，通知 client 客户端新的 master 地址。
    PS：根据推举机制，集群中哨兵数量最好为奇数(3、5…)
3.哨兵用于实现 redis 集群的高可用，本身也是分布式的，作为一个哨兵集群去运行，互相协同工作。
    故障转移时，判断一个 master node 是否宕机了，需要大部分的哨兵都同意才行，涉及到了分布式选举的问题。
    即使部分哨兵节点挂掉了，哨兵集群还是能正常工作的，因为如果一个作为高可用机制重要组成部分的故障转移系统本身是单点的，那就很坑爹了。
4.哨兵的核心知识：
    哨兵至少需要 3 个实例，来保证自己的健壮性。
    哨兵 + redis 主从的部署架构，是不保证数据零丢失的，只能保证 redis 集群的高可用性。
    对于哨兵 + redis 主从这种复杂的部署架构，尽量在测试环境和生产环境，都进行充足的测试和演练。

二、redis安装

三、使用Redis主从复制的作用：

主从复制，是指将一台Redis主节点服务器的数据，复制到其他的Redis从节点服务器。

主节点称为(master/leader)，从节点称为(slave/follower)；

1，数据冗余：主从复制实现了数据的热备份，这也是持久化实现的另一种方式。

2，故障恢复：当主节点出现问题时，可以由从节点提供服务，实现快速的故障恢复；实际上是一种服务的冗余。

3，读写分离：master服务主要用来写，slave服务主要用来读数据。可以提高服务器的负载能力，可以根据需求的变化，添加从节点的数量。

4，负载均衡：同时配合读写分离，由主节点提供写服务，从节点提供读服务，分担服务器的负载。在写少读多的情况下，通过多个从节点分担读负载，能够大大提高Redis服务的并发量和负载。

5，高可用的基石，主从复制是哨兵和集群模式能够实施的基础。



五、配置redis一主二从：

在正常的生产中我们是准备多台服务器，比如三台，每台都在各自的linux系统中安装redis。

但是此处为了演示方便，我使用一台电脑安装虚拟机，在虚拟机上安装三份redis服务，来模拟一主二从的效果。

第一步：修改原redis.conf配置文件：

redis.conf配置文件采用默认的混合持久化，也可以采用单独的RDB持久化，因为主从复制的本质是RDB方式，所以要有RDB方式参与即可。

原redis.conf配置文件需要修改的几个地方：


